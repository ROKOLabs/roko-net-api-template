services:

  #if (Database == "Postgres")
  roko.template-postgres:
    image: postgres
    container_name: roko.template-postgres
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_PASSWORD: yourStrong(!)Password
    restart: unless-stopped
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 6s
      timeout: 3s
      retries: 10
  #endif

  #if (Database == "MsSql")
  roko.template-mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: roko.template-mssql
    volumes:
      - ~/docker_volume/UniqueFolderMsSql/data:/var/opt/mssql/data
      - ~/docker_volume/UniqueFolderMsSql/log:/var/opt/mssql/log
      - ~/docker_volume/UniqueFolderMsSql/secrets:/var/opt/mssql/secrets
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: yourStrong(!)Password
      MSSQL_PID: Developer
    restart: unless-stopped
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-Usa", "-PyourStrong(!)Password", "-Q", "select 1"]
      interval: 1s
      retries: 20
  #endif
  
  roko.template:
    image: roko.template
    depends_on:
      #if (Database == "Postgres")
      roko.template-postgres:
        condition: service_healthy
      #endif
      #if (Database == "MsSql")
      roko.template-mssql:
        condition: service_healthy
      #endif
    build:
      context: .
      dockerfile: src/Roko.Template/Dockerfile
    ports:
      - "5000:80"